# server {
#     listen 80;
#     server_name _;
#     root /var/www/;
#     index index.html;
#     location / {
#         try_files $uri /index.html;
#     }
# }
user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;

  # https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout  65;

  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  server {
    listen 80;
    server_name _;
    root /var/www/;
    index index.html;

    location / {
        try_files $uri /index.html;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
      try_files $uri =404;
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # Any route containing a file extension (e.g. /devicesfile.js)
    location ~ ^.+\..+$ {
      try_files $uri =404;
    }

    location /static/ {
      root /var/www;
    }
  }

}


# worker_processes auto;

# events {
#     worker_connections 8000;
#     multi_accept on;
# }

# http {
#   server_tokens off;

#   gzip on;
#   gzip_http_version 1.0;
#   gzip_comp_level 5;
#   gzip_min_length: 256;
#   gzip_proxied: any;
#   gzip_vary: on;
#   gzip_types
#     application/atom+xml
#     application/javascript
#     application/json
#     application/rss+xml
#     application/vnd.ms-fontobject
#     application/x-font-ttf
#     application/x-web-app-manifest+json
#     application/xhtml+xml
#     application/xml
#     font/opentype
#     image/svg+xml
#     image/x-icon
#     text/css
#     text/plain
#     text/x-component;

#   include       /etc/nginx/mime.types;
#   default_type  application/octet-stream;

#   log_format compression '$remote_addr - $remote_user [$time_local] '
#       '"$request" $status $upstream_addr '
#       '"$http_referer" "$http_user_agent" "$gzip_ratio"';

#   server {
#     listen 80;
#     server_name _;
#     root /var/www/;
#     index index.html;

#     location / {
#         try_files $uri /index.html;
#     }

#     # Media: images, icons, video, audio, HTC
#     location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#       expires 1M;
#       access_log off;
#       add_header Cache-Control "public";
#     }

#     # Javascript and CSS files
#     location ~* \.(?:css|js)$ {
#         try_files $uri =404;
#         expires 1y;
#         access_log off;
#         add_header Cache-Control "public";
#     }

#     # Any route containing a file extension (e.g. /devicesfile.js)
#     location ~ ^.+\..+$ {
#         try_files $uri =404;
#     }

#     location /static/ {
#         root /var/www;
#     }
#   }
# }



# server {
#   listen 80;
#   server_name unicode.wiki www.unicode.wiki;
#   rewrite ^/(.*) https://unicode.wiki/$1 permanent;
# }

# server {
#   listen 443 ssl;
#   server_name www.unicode.wiki;
#   rewrite ^/(.*) https://unicode.wiki/$1 permanent;
# }

# server {
#   listen 443 ssl;
#   server_name unicode.wiki;
#   root /var/www/;
#   index index.html;
#   location / {
#     try_files $uri /index.html;
#   }
# }
